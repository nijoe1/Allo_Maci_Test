"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.genEmptyBallotRootsContract = void 0;
const maci_crypto_1 = require("maci-crypto");
const maci_domainobjs_1 = require("maci-domainobjs");
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const genEmptyBallotRootsContract = async () => {
    const template = await fs_1.default.promises
        .readFile(path_1.default.resolve(__dirname, "..", "templates", "EmptyBallotRoots.sol.template"))
        .then((res) => res.toString());
    // This hard-coded value should be consistent with the value of `stateTreeDepth` of MACI.sol
    const stateTreeDepth = process.env.STATE_TREE_DEPTH ? Number.parseInt(process.env.STATE_TREE_DEPTH, 10) : 10;
    const roots = [];
    for (let i = 0; i < 5; i += 1) {
        const ballot = new maci_domainobjs_1.Ballot(0, i + 1);
        // The empty Ballot tree root
        const ballotTree = new maci_crypto_1.IncrementalQuinTree(stateTreeDepth, ballot.hash(), 5, maci_crypto_1.hash5);
        roots.push(`${"".padStart(4)}emptyBallotRoots[${i}] = uint256(${ballotTree.root});`.padStart(4));
    }
    return template.replace("<% ROOTS %>", roots.join("\n")).trim();
};
exports.genEmptyBallotRootsContract = genEmptyBallotRootsContract;
//# sourceMappingURL=genEmptyBallotRootsContract.js.map