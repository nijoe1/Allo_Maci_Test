import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type { MACI, MACIInterface } from "../../contracts/MACI";
type MACIConstructorParams = [linkLibraryAddresses: MACILibraryAddresses, signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MACI__factory extends ContractFactory {
    constructor(...args: MACIConstructorParams);
    static linkBytecode(linkLibraryAddresses: MACILibraryAddresses): string;
    getDeployTransaction(_pollFactory: AddressLike, _messageProcessorFactory: AddressLike, _tallyFactory: AddressLike, _signUpGatekeeper: AddressLike, _initialVoiceCreditProxy: AddressLike, _topupCredit: AddressLike, _stateTreeDepth: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(_pollFactory: AddressLike, _messageProcessorFactory: AddressLike, _tallyFactory: AddressLike, _signUpGatekeeper: AddressLike, _initialVoiceCreditProxy: AddressLike, _topupCredit: AddressLike, _stateTreeDepth: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<MACI & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): MACI__factory;
    static readonly bytecode = "0x61018060405260405162004851380380620048518339810160408190526200002791620002b0565b33806200004e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200005981620001b3565b5060026040516200006a9062000289565b60ff9091168152602001604051809103906000f08015801562000091573d6000803e3d6000fd5b506001600160a01b0316610120819052604051631ffc735d60e01b81527f0ef71f46e11a513c599eed9dd03576c33439bcfb1cee155316f90541e41649ba6004820152631ffc735d906024016020604051808303816000875af1158015620000fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000123919062000360565b506004805460019081019091556001600160a01b0380891660c05287811660e0528681166101005283811660a0528581166101405284166101605260ff8216608052604080518082019091528181526020810191909152620001859062000203565b600003620001a657604051633d7ba68560e21b815260040160405180910390fd5b50505050505050620003ad565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516314d2f97b60e11b815260009073__$6574937f64fc1d7710ec0e28b7a36713bb$__906329a5f2f6906200023f9085906004016200037a565b602060405180830381865af41580156200025d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000283919062000360565b92915050565b6122dd806200257483390190565b6001600160a01b0381168114620002ad57600080fd5b50565b600080600080600080600060e0888a031215620002cc57600080fd5b8751620002d98162000297565b6020890151909750620002ec8162000297565b6040890151909650620002ff8162000297565b6060890151909550620003128162000297565b6080890151909450620003258162000297565b60a0890151909350620003388162000297565b60c089015190925060ff811681146200035057600080fd5b8091505092959891949750929550565b6000602082840312156200037357600080fd5b5051919050565b60408101818360005b6002811015620003a457815183526020928301929091019060010162000383565b50505092915050565b60805160a05160c05160e051610100516101205161014051610160516120f86200047c6000396000818161046701526108df015260008181610255015261085f01526000818161036601528181610725015281816109a801528181610c37015281816110d60152818161113c01526112510152600081816103a00152610e890152600081816101ef0152610dee0152600081816103060152610d2f01526000818161027c0152610d630152600081816103c7015281816106fb015281816107c8015261122a01526120f86000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806362a361bb1161010f5780639cfced97116100a2578063c02db7b811610071578063c02db7b8146104c5578063cfa1fa03146104e2578063dd0982a3146104f5578063f2fde38b1461050857600080fd5b80639cfced971461044f578063aab4a67014610462578063ac2f007414610489578063bea140b3146104b257600080fd5b80636b4575e2116100de5780636b4575e214610403578063715018a6146104235780637d0a81c81461042b5780638da5cb5b1461043e57600080fd5b806362a361bb1461038857806362b31f1e1461039b578063652c76e4146103c2578063683f3dc3146103fb57600080fd5b80632877e036116101875780633dfb88b2116101565780633dfb88b21461032857806358bfc3791461033b5780635bb939951461034e578063603baff81461036157600080fd5b80632877e036146102db5780632b786571146102e35780633364120a146102ec578063343393b51461030157600080fd5b80630dd5a888116101c35780630dd5a88814610277578063122db1531461029e578063167fd483146102b55780631a8cbcaa146102c857600080fd5b8063055575eb146101ea57806306912d3c1461022e578063079410db14610250575b600080fd5b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61024161023c3660046115e2565b61051b565b6040516102259392919061160d565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102a760045481565b604051908152602001610225565b6102a76102c3366004611693565b6105c9565b6102116102d636600461172d565b6106a2565b6102a76106ea565b6102a760015481565b6102ff6102fa3660046117b6565b61079d565b005b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102a7610336366004611821565b610a6a565b6102a761034936600461189f565b610aeb565b6102a761035c366004611945565b610b73565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6102a7610396366004611967565b610b98565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b6103e97f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610225565b6103e9600a81565b6104166104113660046119c8565b610bd2565b6040516102259190611aa8565b6102ff610fbd565b6102a7610439366004611ad8565b610fd1565b6000546001600160a01b0316610211565b6102a761045d366004611b3a565b611011565b6102117f000000000000000000000000000000000000000000000000000000000000000081565b61021161049736600461172d565b6002602052600090815260409020546001600160a01b031681565b6102a76104c0366004611b93565b61104b565b6003546104d29060ff1681565b6040519015158152602001610225565b6102ff6104f0366004611945565b611085565b6102a761050336600461172d565b6111d4565b6102ff610516366004611bec565b6112c6565b610523611466565b60408051808201909152600080825260208201526000610541611485565b85518152602080870151828201526040805180820182527f171e826ad4a870fd925e0bf0e87884e70e080879c2205ef10114f28a3b6f6dd781527f2bd407d897fbbca9f88adfd2d15252e69de8c1564eb4d3d27162e259172f1a1d818401528151808301909252878252918101839052945092506105bf84846105c9565b9150509250925092565b60006105d36114a4565b6020848101805151835280518201519183019190915280516040908101519083015280516060908101519083015251608090810151908201526106146114a4565b6020858101805160a0908101518452815160c0015184840152815160e0015160408086019190915282516101000151606086015291516101200151608085015281519081019091528651815261069991810161066f85611011565b815260200161067d84611011565b8152602001866000015181526020018660200151815250611011565b95945050505050565b600060015482106106ce5760405163a86ecdd560e01b8152600481018390526024015b60405180910390fd5b506000908152600260205260409020546001600160a01b031690565b604051631b9b8aa760e01b815260ff7f00000000000000000000000000000000000000000000000000000000000000001660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631b9b8aa790602401602060405180830381865afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107989190611c09565b905090565b60035460ff16156107c15760405163259e785160e11b815260040160405180910390fd5b6107ef60ff7f0000000000000000000000000000000000000000000000000000000000000000166005611d1c565b600454106108105760405163b984588b60e01b815260040160405180910390fd5b61082283600001518460200151611304565b61083f576040516379fae7af60e01b815260040160405180910390fd5b60048054600101815560405163125c7dfb60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916324b8fbf691610894913391879101611d4c565b600060405180830381600087803b1580156108ae57600080fd5b505af11580156108c2573d6000803e3d6000fd5b505060405163b36543a960e01b8152600092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915063b36543a9906109179033908690600401611d4c565b602060405180830381865afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109589190611c09565b905060004290506000610984604051806060016040528088815260200185815260200184815250610fd1565b604051631ffc735d60e01b8152600481018290529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631ffc735d906024016020604051808303816000875af11580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a159190611c09565b602080890151895160408051858152938401899052830187905292935091907fd3c3cd829e4e37d5baaf10abace26b24e0046e20500c999380410f807edfcda09060600160405180910390a350505050505050565b60405163248f667760e01b815260009073__$ce9c2c925f157047e54fa833ec4e61409f$__9063248f667790610aa4908590600401611d8e565b602060405180830381865af4158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190611c09565b92915050565b60006000805160206120a3833981519152600283604051602001610b0f9190611dbf565b60408051601f1981840301815290829052610b2991611df5565b602060405180830381855afa158015610b46573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610b699190611c09565b610ae59190611e27565b6000610b7d6114c2565b83815260208101839052610b9081610b98565b949350505050565b6040516314d2f97b60e11b815260009073__$6574937f64fc1d7710ec0e28b7a36713bb$__906329a5f2f690610aa4908590600401611e49565b6040805160608101825260008082526020820181905291810191909152610bf76113ae565b6001805480820190915585516020870151610c129190611304565b610c2f576040516379fae7af60e01b815260040160405180910390fd5b8015610cd7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166369e7c5866040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb79190611e71565b610cd7576040516310ae3cef60e31b8152600481018290526024016106c5565b600060405180604001604052808960400151600560ff16610cf89190611e93565b81526020018960600151600560ff16610d119190611e93565b905290506000610d296000546001600160a01b031690565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b43c49698c858d8d307f0000000000000000000000000000000000000000000000000000000000000000896040518863ffffffff1660e01b8152600401610da59796959493929190611ea2565b6020604051808303816000875af1158015610dc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de89190611f30565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663363448738a8a85878c6040518663ffffffff1660e01b8152600401610e40959493929190611f6f565b6020604051808303816000875af1158015610e5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e839190611f30565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663431a71758b8b8686898e6040518763ffffffff1660e01b8152600401610edd96959493929190611fae565b6020604051808303816000875af1158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f209190611f30565b60008781526002602090815260409182902080546001600160a01b0319166001600160a01b0388811691821790925583516060810185529081528682168184015290841681840152908e01518e519251919a509293507f5d44349ae326b87d465005978623860ad393d327ba73078f82a9331a7cc6b36090610fa5908a908c90611ff6565b60405180910390a35050505050509695505050505050565b610fc56113ae565b610fcf60006113db565b565b6000610fdb6114e0565b825151815282516020908101518183015283015181600260200201526040830151606082015261100a81610a6a565b9392505050565b604051630926f44b60e31b815260009073__$20527677031d76601747626a9845039fe4$__90634937a25890610aa490859060040161202c565b6040516304b98e1d60e31b815260009073__$dc01a9744591ab014bc46a3b7671cdaefb$__906325cc70e890610aa4908590600401612054565b60008181526002602052604090205481906001600160a01b031633146110c057604051635859049960e01b81523360048201526024016106c5565b60405163c15da65b60e01b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c15da65b90602401600060405180830381600087803b15801561112257600080fd5b505af1158015611136573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b6a64acd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611198573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bc9190611e71565b156111cf576003805460ff191660011790555b505050565b60008181526002602052604081205482906001600160a01b0316331461120f57604051635859049960e01b81523360048201526024016106c5565b6003805460ff191690556040516324a47aeb60e01b815260ff7f00000000000000000000000000000000000000000000000000000000000000001660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906324a47aeb906024016020604051808303816000875af11580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100a9190611c09565b6112ce6113ae565b6001600160a01b0381166112f857604051631e4fbdf760e01b8152600060048201526024016106c5565b611301816113db565b50565b6000806000805160206120a3833981519152848509905060006000805160206120a3833981519152848509905060006000805160206120a3833981519152826000805160206120a383398151915285620292fc0908905060006000805160206120a383398151915280846000805160206120a383398151915287620292f8090960010890506113a282826000805160206120a383398151915261142b565b15979650505050505050565b6000546001600160a01b03163314610fcf5760405163118cdaa760e01b81523360048201526024016106c5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000838381116114425761143f838261207c565b90505b828061145057611450611e11565b600061145c868461208f565b0895945050505050565b604051806040016040528060008152602001611480611485565b905290565b604051806101400160405280600a906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611537576115376114fe565b60405290565b604051610140810167ffffffffffffffff81118282101715611537576115376114fe565b604051601f8201601f1916810167ffffffffffffffff8111828210171561158a5761158a6114fe565b604052919050565b600082601f8301126115a357600080fd5b6115ab611514565b8060408401858111156115bd57600080fd5b845b818110156115d75780358452602093840193016115bf565b509095945050505050565b600080606083850312156115f557600080fd5b6115ff8484611592565b946040939093013593505050565b835181526020808501516101c08301919081840160005b600a81101561164157825182529183019190830190600101611624565b5050855161016085015250506020909301516101808201526101a00152919050565b60006040828403121561167557600080fd5b61167d611514565b9050813581526020820135602082015292915050565b6000808284036101a08112156116a857600080fd5b610160808212156116b857600080fd5b6116c0611514565b915084358252602086603f8701126116d757600080fd5b6116df61153d565b9186019180888411156116f157600080fd5b8288015b8481101561170c57803583529183019183016116f5565b5080838601525050508193506117228682611663565b925050509250929050565b60006020828403121561173f57600080fd5b5035919050565b600082601f83011261175757600080fd5b813567ffffffffffffffff811115611771576117716114fe565b611784601f8201601f1916602001611561565b81815284602083860101111561179957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000608084860312156117cb57600080fd5b6117d58585611663565b9250604084013567ffffffffffffffff808211156117f257600080fd5b6117fe87838801611746565b9350606086013591508082111561181457600080fd5b506105bf86828701611746565b60006080828403121561183357600080fd5b82601f83011261184257600080fd5b6040516080810181811067ffffffffffffffff82111715611865576118656114fe565b60405280608084018581111561187a57600080fd5b845b8181101561189457803583526020928301920161187c565b509195945050505050565b600060208083850312156118b257600080fd5b823567ffffffffffffffff808211156118ca57600080fd5b818501915085601f8301126118de57600080fd5b8135818111156118f0576118f06114fe565b8060051b9150611901848301611561565b818152918301840191848101908884111561191b57600080fd5b938501935b8385101561193957843582529385019390850190611920565b98975050505050505050565b6000806040838503121561195857600080fd5b50508035926020909101359150565b60006040828403121561197957600080fd5b61100a8383611592565b803560ff8116811461199457600080fd5b919050565b6001600160a01b038116811461130157600080fd5b803561199481611999565b80356002811061199457600080fd5b6000806000806000808688036101408112156119e357600080fd5b873596506080601f19820112156119f957600080fd5b506040516080810181811067ffffffffffffffff82111715611a1d57611a1d6114fe565b604052611a2c60208901611983565b8152611a3a60408901611983565b6020820152611a4b60608901611983565b6040820152611a5c60808901611983565b60608201529450611a708860a08901611663565b9350611a7e60e088016119ae565b9250611a8d61010088016119ae565b9150611a9c61012088016119b9565b90509295509295509295565b60608101610ae5828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b600060808284031215611aea57600080fd5b6040516060810181811067ffffffffffffffff82111715611b0d57611b0d6114fe565b604052611b1a8484611663565b815260408301356020820152606083013560408201528091505092915050565b600060a08284031215611b4c57600080fd5b82601f830112611b5b57600080fd5b60405160a0810181811067ffffffffffffffff82111715611b7e57611b7e6114fe565b6040528060a084018581111561187a57600080fd5b600060608284031215611ba557600080fd5b82601f830112611bb457600080fd5b6040516060810181811067ffffffffffffffff82111715611bd757611bd76114fe565b60405280606084018581111561187a57600080fd5b600060208284031215611bfe57600080fd5b813561100a81611999565b600060208284031215611c1b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611c73578160001904821115611c5957611c59611c22565b80851615611c6657918102915b93841c9390800290611c3d565b509250929050565b600082611c8a57506001610ae5565b81611c9757506000610ae5565b8160018114611cad5760028114611cb757611cd3565b6001915050610ae5565b60ff841115611cc857611cc8611c22565b50506001821b610ae5565b5060208310610133831016604e8410600b8410161715611cf6575081810a610ae5565b611d008383611c38565b8060001904821115611d1457611d14611c22565b029392505050565b600061100a8383611c7b565b60005b83811015611d43578181015183820152602001611d2b565b50506000910152565b60018060a01b03831681526040602082015260008251806040840152611d79816060850160208701611d28565b601f01601f1916919091016060019392505050565b60808101818360005b6004811015611db6578151835260209283019290910190600101611d97565b50505092915050565b815160009082906020808601845b83811015611de957815185529382019390820190600101611dcd565b50929695505050505050565b60008251611e07818460208701611d28565b9190910192915050565b634e487b7160e01b600052601260045260246000fd5b600082611e4457634e487b7160e01b600052601260045260246000fd5b500690565b60408101818360005b6002811015611db6578151835260209283019290910190600101611e52565b600060208284031215611e8357600080fd5b8151801515811461100a57600080fd5b600061100a60ff841683611c7b565b8781526101808101611ec1602083018980518252602090810151910152565b60ff875116606083015260ff602088015116608083015260ff60408801511660a083015260ff60608801511660c0830152611f0960e083018780518252602090810151910152565b6001600160a01b038581166101208401528481166101408401528316610160830152611939565b600060208284031215611f4257600080fd5b815161100a81611999565b60028110611f6b57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038681168252858116602083015284811660408301528316606082015260a08101611fa46080830184611f4d565b9695505050505050565b6001600160a01b0387811682528681166020830152858116604083015284811660608301528316608082015260c08101611feb60a0830184611f4d565b979650505050505050565b8281526080810161100a602083018480516001600160a01b03908116835260208083015182169084015260409182015116910152565b60a08101818360005b6005811015611db6578151835260209283019290910190600101612035565b60608101818360005b6003811015611db657815183526020928301929091019060010161205d565b80820180821115610ae557610ae5611c22565b81810381811115610ae557610ae5611c2256fe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220b905c106a22a152204a352eabf803e3f5ef0d13e5b117889b6c563f06c4d132564736f6c6343000814003360e06040523480156200001157600080fd5b50604051620022dd380380620022dd83398101604081905262000034916200063e565b8080600533806200006057604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200006b81620005ee565b50816000036200008e5760405163682e504160e11b815260040160405180910390fd5b6020821115620000bc57604051637ccdcc9760e11b8152600481018390526020602482015260440162000057565b80600214158015620000cf575080600514155b15620000ee57604051636f7b6c0360e01b815260040160405180910390fd5b6000805460ff60a01b191660028314600160a01b02179055608082905260a08190526200011c82826200076d565b60c05250507f0ef71f46e11a513c599eed9dd03576c33439bcfb1cee155316f90541e41649ba6101725550507f0404a2ed0a1df2006441895d9a65ffffdd4968cb5f555fe72a6da7aaec83e1a0610173557f0b1c3d09dd575749a374a9dc1ee32af8c2312e24ad33a3e40fce8120b0f25fe3610174557f1f60ed72fc1915366d2e52cfc7ddc0ff854c7aee9abbc07d1ca88ada842354dc610175557f2ca1efc603fc121baf791319195ee3ab7fa075cee664d008f9ab2870f5028360610176557f2a0381fc4fb108733dfc58c355f2de753bcde61bd988eaa7d33fc967262be5ad610177557f12c6c7cce0332367373dafc95d75b98dd58980410434929dff09466a4ba262db610178557f2f212d3cc7e7334c4a10ced1be011b9cd70f73cca5522fc4137a51be8a17d18e610179557f0968ef20d515d8d743b2cf66603f8b86f3fdeee932fdc911774bb8699566e11c61017a557f2e3604981890fb676c3dac1e14c5c201573f99d1b9e67025109baf274b10e9dd61017b557f147d317fd4b7a1dd6cb961cfba444466b3c431ea638c8df74a89fc591d1a3a5161017c557f10ea2b72952b619afd5b9bc50561df8de0c6e1ba9b5ad66b179c39c420304a7561017d557f1c49f7b357d244d9144676ad23f79465ef5b88ef0f91762a3d35997688af9a5a61017e557f05ca0cfef8158efc5c4af44122e2765179b5463618d5c5ac6185c192332cade961017f557f0ae1595634e8a2e23620f33f9b2b5a23387a28f5833814646900110842f3a109610180557f08be8c2a6a099d9cdc96f9197af6ad99595d73419eb0694eaea432fa18baa203610181557f207f689ce35cf857ee6e68c42d31bb2191d1e84d7a295ccd63995ca7369d20eb610182557f2a6f6b7e4a2cd1a6466ed17debb0a27904e99adbd72be85566a87340f41efd05610183557f0f0725795350566920bbf56d3f22c4d38e832e638c9cb91811f83194e9dd74be610184557f02cd50632e5c5b00a9a93f434797725ec0f85f11ba1b6a844f0cd10c70df6392610185557f08868b85d2fa4c17eec0a7d8bca4671a00474bff80e801981437b77aa11d10b5610186557f294a84b7b46ea0a781877a2c0efd1ee56758d9ee55722721867efe53f4645286610187557f02cb8070979a018bb919f0d1a25d5ad3d5a376c4cf66f36d33434d221ca77e88610188557f05dfce8303f471d776762f2ddd37f05191b8bf5064d8d28e892cd4ec21e7aab4610189557f28a47617aa1e26bf42fd3b26e88aa717fd759bb92b22faaf5ad82090680b523161018a557f1de9253f5fa546603817abd83d1a13c8562f2bf6a0069a546fe546ca0c03c17061018b557f1cb9bd316e341b873dbbef94fd699c6e3a638451de2817db1620235db2b6c39e61018c557f0654785b2917d7c659a95738add3d8eb51cbbefc0f521c2640bc74b0fec5816261018d557f2eed74eacf5de60a758f815cb5e73015455c38408143fc25810d03e1ec9e352461018e557f16bea3363deb4753db67be8b19110b169ae39f33113a92773c41a8b025ca5a9361018f557f2b0dd3b7e0a7e234a4a1b48dd0e9083dc8bfc8cd7f72abdb93a1b8e5ef3e22ed610190557f0bc1ca795d5a059b1dc0c51f72c46f2288cb139ebf09f38ac3e8bca0485ed497610191557f249ca1610a7f80bbf422388c18ef9777fcdab26ee718e2b39e4011973a9023306101925562000782565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200065157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620006af57816000190482111562000693576200069362000658565b80851615620006a157918102915b93841c939080029062000673565b509250929050565b600082620006c85750600162000767565b81620006d75750600062000767565b8160018114620006f05760028114620006fb576200071b565b600191505062000767565b60ff8411156200070f576200070f62000658565b50506001821b62000767565b5060208310610133831016604e8410600b841016171562000740575081810a62000767565b6200074c83836200066e565b806000190482111562000763576200076362000658565b0290505b92915050565b60006200077b8383620006b7565b9392505050565b60805160a05160c051611aad62000830600039600081816103ea01528181610a2501528181610ac201528181610c7f0152610d820152600081816103230152818161056e015281816106e401528181610bb401528181610ec301528181611037015261129801526000818161041a0152818161047b0152818161054401528181610bed01528181610cb801528181610d0201528181610e6401528181610f1a01526111d30152611aad6000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806381d6a24a116100c3578063c00bdbcc1161007c578063c00bdbcc146102b8578063c15da65b146102cb578063d9c55ce1146102de578063dda89a6e146102e6578063e93fb4d4146102f0578063f2fde38b1461030357600080fd5b806381d6a24a146102455780638da5cb5b146102615780639cfced971461027c578063a27154ba1461028f578063b6a64acd14610297578063bea140b3146102a557600080fd5b806358bfc3791161011557806358bfc379146101cc5780635bb93995146101df5780635bf1fa4d146101f257806362a361bb1461020557806369e7c58614610218578063715018a61461023b57600080fd5b80631b9b8aa71461015d5780631ffc735d1461018357806324a47aeb146101965780633bfa6fce146101a95780633dfb88b2146101b15780633e1a8cc1146101c4575b600080fd5b61017061016b3660046114ba565b610316565b6040519081526020015b60405180910390f35b6101706101913660046114ba565b610399565b6101706101a43660046114ba565b6104c7565b6101706106d8565b6101706101bf36600461151a565b610723565b6101706107a4565b6101706101da366004611598565b6107d3565b6101706101ed36600461163e565b61086d565b61017061020036600461163e565b610892565b610170610213366004611660565b610931565b61016e5461022b90610100900460ff1681565b604051901515815260200161017a565b61024361096b565b005b610170546001546040805192835260208301919091520161017a565b6000546040516001600160a01b03909116815260200161017a565b61017061028a3660046116bb565b61097f565b610170602081565b61016e5461022b9060ff1681565b6101706102b3366004611714565b6109b9565b6102436102c63660046114ba565b6109f3565b6102436102d93660046114ba565b610a6f565b610243610c75565b6101706101715481565b6101706102fe3660046114ba565b610dbf565b61024361031136600461176d565b610dfa565b61017154600090610347837f0000000000000000000000000000000000000000000000000000000000000000611897565b101561037d5761017154604051627289df60e61b8152610374918491600401918252602082015260400190565b60405180910390fd5b61014d8260218110610391576103916118a3565b015492915050565b60006103a3610e35565b50610171546103b3826000610e62565b6103be8160016118b9565b610171556103cf61014d600061141f565b600061016f5561016e805460ff191690556101715461040f907f0000000000000000000000000000000000000000000000000000000000000000906118cc565b6000036104c25760027f000000000000000000000000000000000000000000000000000000000000000060218110610449576104496118a3565b600402015460018054600090815261014c6020526040812092909255805491610471836118ee565b90915550600290507f0000000000000000000000000000000000000000000000000000000000000000602181106104aa576104aa6118a3565b6004020160008091018190556104c29060869061141f565b919050565b60006104d1610e35565b816000036104f257604051630543d40760e11b815260040160405180910390fd5b61016e5460ff1661051657604051631e596e4360e11b815260040160405180910390fd5b602082111561054257604051632cd31ae960e01b81526004810183905260206024820152604401610374565b7f00000000000000000000000000000000000000000000000000000000000000005b61017154610592827f0000000000000000000000000000000000000000000000000000000000000000611897565b10156105aa57806105a2816118ee565b915050610564565b808310156105d457604051627289df60e61b81526004810184905260248101829052604401610374565b8083036106105761016f5461014d84602181106105f3576105f36118a3565b0155505061016e805461ff00191661010017905561016f54919050565b61016f549150805b838110156106aa57600061062b82610fa3565b600054909150600160a01b900460ff16156106635761064861142e565b8481526020810182905261065b81610931565b945050610697565b61066b61144c565b848152602081018290526040810182905260608101829052608081018290526106938161097f565b9450505b50806106a2816118ee565b915050610618565b508161014d84602181106106c0576106c06118a3565b015561016e805461ff00191661010017905550919050565b60015b600154610708827f0000000000000000000000000000000000000000000000000000000000000000611897565b10156107205780610718816118ee565b9150506106db565b90565b60405163248f667760e01b815260009073__$ce9c2c925f157047e54fa833ec4e61409f$__9063248f66779061075d908590600401611907565b602060405180830381865af415801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190611938565b92915050565b61016e5460009060ff166107cb57604051631e596e4360e11b815260040160405180910390fd5b5061016f5490565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016002836040516020016108099190611951565b60408051601f198184030181529082905261082391611987565b602060405180830381855afa158015610840573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906108639190611938565b61079e91906118cc565b600061087761142e565b8381526020810183905261088a81610931565b949350505050565b600061089c61144c565b600284602181106108af576108af6118a3565b60040201548152600284602181106108c9576108c96118a3565b60040201600101548160016020020152600284602181106108ec576108ec6118a3565b600402016002015481600260200201526002846021811061090f5761090f6118a3565b6004020160030154816003602002015282816004602002015261088a8161097f565b6040516314d2f97b60e11b815260009073__$6574937f64fc1d7710ec0e28b7a36713bb$__906329a5f2f69061075d9085906004016119b6565b610973610e35565b61097d6000610fb9565b565b604051630926f44b60e31b815260009073__$20527677031d76601747626a9845039fe4$__90634937a2589061075d9085906004016119de565b6040516304b98e1d60e31b815260009073__$dc01a9744591ab014bc46a3b7671cdaefb$__906325cc70e89061075d908590600401611a06565b6109fb610e35565b60018054600090815261014c6020526040812083905581549190610a1e836118ee565b91905055507f00000000000000000000000000000000000000000000000000000000000000006101716000828254610a5691906118b9565b9091555050600061016f555061016e805460ff19169055565b610a77610e35565b61016e5460ff1615610a9c57604051630d36aec160e01b815260040160405180910390fd5b61017154600003610ac0576040516316a0341160e11b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061017154610aef91906118cc565b15610afc57610afc610c75565b600154600103610b2557610b106000610dbf565b61016f5561016e805460ff1916600117905550565b6000610b2f6106d8565b610170549091506000905b600154811015610bab578315801590610b5257508382145b15610b5d5750505050565b610b74610b6c61017054610dbf565b600085611009565b6101708054906000610b85836118ee565b91905055508180610b95906118ee565b9250508080610ba3906118ee565b915050610b3a565b506000610bd8837f0000000000000000000000000000000000000000000000000000000000000000611897565b90506001546101705403610c41576000610c117f0000000000000000000000000000000000000000000000000000000000000000610fa3565b6001549091505b82811015610c3e57610c2c82600087611009565b80610c36816118ee565b915050610c18565b50505b60a78360218110610c5457610c546118a3565b600402016000015461016f55505061016e805460ff19166001179055505b50565b610c7d610e35565b7f000000000000000000000000000000000000000000000000000000000000000061017154610cac91906118cc565b600003610cf457610cdc7f0000000000000000000000000000000000000000000000000000000000000000610fa3565b600154600090815261014c6020526040902055610d65565b610cfe60006111d1565b60027f000000000000000000000000000000000000000000000000000000000000000060218110610d3157610d316118a3565b6004020154600154600090815261014c6020526040812091909155610d589060029061146a565b610d6561014d600061141f565b60006001546001610d7691906118b9565b60018190559050610da77f000000000000000000000000000000000000000000000000000000000000000082611a2e565b6101715550600061016f5561016e805460ff19169055565b60008160015411610de65760405163042a2e7160e11b815260048101839052602401610374565b50600090815261014c602052604090205490565b610e02610e35565b6001600160a01b038116610e2c57604051631e4fbdf760e01b815260006004820152602401610374565b610c7281610fb9565b6000546001600160a01b0316331461097d5760405163118cdaa760e01b8152336004820152602401610374565b7f0000000000000000000000000000000000000000000000000000000000000000811115610ea35760405163d1459f7960e01b815260040160405180910390fd5b600060868260218110610eb857610eb86118a3565b01549050610ee760017f0000000000000000000000000000000000000000000000000000000000000000611a45565b8114610f6c578260028360218110610f0157610f016118a3565b600402018260048110610f1657610f166118a3565b01557f00000000000000000000000000000000000000000000000000000000000000008214610f675760868260218110610f5257610f526118a3565b018054906000610f61836118ee565b91905055505b505050565b610f76828461133d565b925060868260218110610f8b57610f8b6118a3565b600091015581610f9a816118ee565b92505050610ea3565b60006101728260218110610391576103916118a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8082111561101657505050565b600061012b836021811061102c5761102c6118a3565b0154905061105b60017f0000000000000000000000000000000000000000000000000000000000000000611a45565b81146110b9578360a78460218110611075576110756118a3565b60040201826004811061108a5761108a6118a3565b015561012b83602181106110a0576110a06118a3565b0180549060006110af836118ee565b91905055506111cb565b60008054600160a01b900460ff1615611106576110d461142e565b60a785602181106110e7576110e76118a3565b60040201548152602081018690526110fe81610931565b91505061119b565b61110e61144c565b60005b838160ff1610156111755760a7866021811061112f5761112f6118a3565b600402018160ff1660048110611147576111476118a3565b0154828260ff166005811061115e5761115e6118a3565b60200201528061116d81611a58565b915050611111565b5085818460058110611189576111896118a3565b60200201526111978161097f565b9150505b61012b84602181106111af576111af6118a3565b60009101556111c9816111c38660016118b9565b85611009565b505b50505050565b7f0000000000000000000000000000000000000000000000000000000000000000811015610c725760006086826021811061120e5761120e6118a3565b01549050801561131257600061122261144c565b600061122d85610fa3565b905060005b848160ff1610156112965760028660218110611250576112506118a3565b600402018160ff1660048110611268576112686118a3565b0154838260ff166005811061127f5761127f6118a3565b60200201528061128e81611a58565b915050611232565b7f00000000000000000000000000000000000000000000000000000000000000008160ff1610156112ee5781838260ff16600581106112d7576112d76118a3565b6020020152806112e681611a58565b915050611296565b6112f78361097f565b935061130d846113088860016118b9565b610e62565b505050505b60868260218110611325576113256118a3565b600091015581611334816118ee565b925050506111d1565b600061134761144c565b6002846021811061135a5761135a6118a3565b6004020154815260028460218110611374576113746118a3565b6004020160010154816001602002015260028460218110611397576113976118a3565b60040201600201548160026020020152600284602181106113ba576113ba6118a3565b600402016003015481600360200201528281600460200201526113dc8161097f565b9150600284602181106113f1576113f16118a3565b60040201600061141891905060008155600101600081556001016000815560010160009055565b5092915050565b50610c72906021810190611479565b60405180604001604052806002906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b50610c72906084810190611492565b5b8082111561148e576000815560010161147a565b5090565b8082111561148e57600080825560018201819055600282018190556003820155600401611492565b6000602082840312156114cc57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611512576115126114d3565b604052919050565b60006080828403121561152c57600080fd5b82601f83011261153b57600080fd5b6040516080810181811067ffffffffffffffff8211171561155e5761155e6114d3565b60405280608084018581111561157357600080fd5b845b8181101561158d578035835260209283019201611575565b509195945050505050565b600060208083850312156115ab57600080fd5b823567ffffffffffffffff808211156115c357600080fd5b818501915085601f8301126115d757600080fd5b8135818111156115e9576115e96114d3565b8060051b91506115fa8483016114e9565b818152918301840191848101908884111561161457600080fd5b938501935b8385101561163257843582529385019390850190611619565b98975050505050505050565b6000806040838503121561165157600080fd5b50508035926020909101359150565b60006040828403121561167257600080fd5b82601f83011261168157600080fd5b6040516040810181811067ffffffffffffffff821117156116a4576116a46114d3565b806040525080604084018581111561157357600080fd5b600060a082840312156116cd57600080fd5b82601f8301126116dc57600080fd5b60405160a0810181811067ffffffffffffffff821117156116ff576116ff6114d3565b6040528060a084018581111561157357600080fd5b60006060828403121561172657600080fd5b82601f83011261173557600080fd5b6040516060810181811067ffffffffffffffff82111715611758576117586114d3565b60405280606084018581111561157357600080fd5b60006020828403121561177f57600080fd5b81356001600160a01b038116811461179657600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156117ee5781600019048211156117d4576117d461179d565b808516156117e157918102915b93841c93908002906117b8565b509250929050565b6000826118055750600161079e565b816118125750600061079e565b816001811461182857600281146118325761184e565b600191505061079e565b60ff8411156118435761184361179d565b50506001821b61079e565b5060208310610133831016604e8410600b8410161715611871575081810a61079e565b61187b83836117b3565b806000190482111561188f5761188f61179d565b029392505050565b600061179683836117f6565b634e487b7160e01b600052603260045260246000fd5b8082018082111561079e5761079e61179d565b6000826118e957634e487b7160e01b600052601260045260246000fd5b500690565b6000600182016119005761190061179d565b5060010190565b60808101818360005b600481101561192f578151835260209283019290910190600101611910565b50505092915050565b60006020828403121561194a57600080fd5b5051919050565b815160009082906020808601845b8381101561197b5781518552938201939082019060010161195f565b50929695505050505050565b6000825160005b818110156119a8576020818601810151858301520161198e565b506000920191825250919050565b60408101818360005b600281101561192f5781518352602092830192909101906001016119bf565b60a08101818360005b600581101561192f5781518352602092830192909101906001016119e7565b60608101818360005b600381101561192f578151835260209283019290910190600101611a0f565b808202811582820484141761079e5761079e61179d565b8181038181111561079e5761079e61179d565b600060ff821660ff8103611a6e57611a6e61179d565b6001019291505056fea264697066735822122068a1131b6c6dfbb3893f54c9551377294b97248fdd759de69d7ff5494cab996f64736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IPollFactory";
            readonly name: "_pollFactory";
            readonly type: "address";
        }, {
            readonly internalType: "contract IMessageProcessorFactory";
            readonly name: "_messageProcessorFactory";
            readonly type: "address";
        }, {
            readonly internalType: "contract ITallyFactory";
            readonly name: "_tallyFactory";
            readonly type: "address";
        }, {
            readonly internalType: "contract SignUpGatekeeper";
            readonly name: "_signUpGatekeeper";
            readonly type: "address";
        }, {
            readonly internalType: "contract InitialVoiceCreditProxy";
            readonly name: "_initialVoiceCreditProxy";
            readonly type: "address";
        }, {
            readonly internalType: "contract TopupCredit";
            readonly name: "_topupCredit";
            readonly type: "address";
        }, {
            readonly internalType: "uint8";
            readonly name: "_stateTreeDepth";
            readonly type: "uint8";
        }];
        readonly stateMutability: "payable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_caller";
            readonly type: "address";
        }];
        readonly name: "CallerMustBePoll";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMessage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPubKey";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "pollId";
            readonly type: "uint256";
        }];
        readonly name: "PollDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "PoseidonHashLibrariesNotLinked";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "pollId";
            readonly type: "uint256";
        }];
        readonly name: "PreviousPollNotCompleted";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SignupTemporaryBlocked";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TooManySignups";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_pollId";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "_coordinatorPubKeyX";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "_coordinatorPubKeyY";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "poll";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "messageProcessor";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "tally";
                readonly type: "address";
            }];
            readonly indexed: false;
            readonly internalType: "struct MACI.PollContracts";
            readonly name: "pollAddr";
            readonly type: "tuple";
        }];
        readonly name: "DeployPoll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_stateIndex";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "_userPubKeyX";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "_userPubKeyY";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_voiceCreditBalance";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_timestamp";
            readonly type: "uint256";
        }];
        readonly name: "SignUp";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "MESSAGE_DATA_LENGTH";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_duration";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "intStateTreeDepth";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "messageTreeSubDepth";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "messageTreeDepth";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "voteOptionTreeDepth";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Params.TreeDepths";
            readonly name: "_treeDepths";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "x";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "y";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DomainObjs.PubKey";
            readonly name: "_coordinatorPubKey";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "_verifier";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_vkRegistry";
            readonly type: "address";
        }, {
            readonly internalType: "enum DomainObjs.Mode";
            readonly name: "_mode";
            readonly type: "uint8";
        }];
        readonly name: "deployPoll";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "poll";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "messageProcessor";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "tally";
                readonly type: "address";
            }];
            readonly internalType: "struct MACI.PollContracts";
            readonly name: "pollAddr";
            readonly type: "tuple";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_pollId";
            readonly type: "uint256";
        }];
        readonly name: "getPoll";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "poll";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getStateAqRoot";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "root";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[2]";
            readonly name: "array";
            readonly type: "uint256[2]";
        }];
        readonly name: "hash2";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "result";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[3]";
            readonly name: "array";
            readonly type: "uint256[3]";
        }];
        readonly name: "hash3";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "result";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[4]";
            readonly name: "array";
            readonly type: "uint256[4]";
        }];
        readonly name: "hash4";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "result";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[5]";
            readonly name: "array";
            readonly type: "uint256[5]";
        }];
        readonly name: "hash5";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "result";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "left";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "right";
            readonly type: "uint256";
        }];
        readonly name: "hashLeftRight";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "result";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "msgType";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[10]";
                readonly name: "data";
                readonly type: "uint256[10]";
            }];
            readonly internalType: "struct DomainObjs.Message";
            readonly name: "_message";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "x";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "y";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DomainObjs.PubKey";
            readonly name: "_encPubKey";
            readonly type: "tuple";
        }];
        readonly name: "hashMessageAndEncPubKey";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "msgHash";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "x";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "y";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct DomainObjs.PubKey";
                readonly name: "pubKey";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint256";
                readonly name: "voiceCreditBalance";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timestamp";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DomainObjs.StateLeaf";
            readonly name: "_stateLeaf";
            readonly type: "tuple";
        }];
        readonly name: "hashStateLeaf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "ciphertext";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialVoiceCreditProxy";
        readonly outputs: readonly [{
            readonly internalType: "contract InitialVoiceCreditProxy";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_pollId";
            readonly type: "uint256";
        }];
        readonly name: "mergeStateAq";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "root";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_numSrQueueOps";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_pollId";
            readonly type: "uint256";
        }];
        readonly name: "mergeStateAqSubRoots";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "messageProcessorFactory";
        readonly outputs: readonly [{
            readonly internalType: "contract IMessageProcessorFactory";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "nextPollId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "numSignUps";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[2]";
            readonly name: "dataToPad";
            readonly type: "uint256[2]";
        }, {
            readonly internalType: "uint256";
            readonly name: "msgType";
            readonly type: "uint256";
        }];
        readonly name: "padAndHashMessage";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "msgType";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256[10]";
                readonly name: "data";
                readonly type: "uint256[10]";
            }];
            readonly internalType: "struct DomainObjs.Message";
            readonly name: "message";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "x";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "y";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DomainObjs.PubKey";
            readonly name: "padKey";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "msgHash";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pollFactory";
        readonly outputs: readonly [{
            readonly internalType: "contract IPollFactory";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "polls";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "array";
            readonly type: "uint256[]";
        }];
        readonly name: "sha256Hash";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "result";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "x";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "y";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DomainObjs.PubKey";
            readonly name: "_pubKey";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_signUpGatekeeperData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_initialVoiceCreditProxyData";
            readonly type: "bytes";
        }];
        readonly name: "signUp";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "signUpGatekeeper";
        readonly outputs: readonly [{
            readonly internalType: "contract SignUpGatekeeper";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "stateAq";
        readonly outputs: readonly [{
            readonly internalType: "contract AccQueue";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "stateTreeDepth";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "subtreesMerged";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tallyFactory";
        readonly outputs: readonly [{
            readonly internalType: "contract ITallyFactory";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "topupCredit";
        readonly outputs: readonly [{
            readonly internalType: "contract TopupCredit";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MACIInterface;
    static connect(address: string, runner?: ContractRunner | null): MACI;
}
export interface MACILibraryAddresses {
    ["contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
    ["contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
    ["contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
    ["contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
export {};
//# sourceMappingURL=MACI__factory.d.ts.map