"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pairing__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "PairingAddFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "PairingMulFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "PairingOpcodeFailed",
        type: "error",
    },
    {
        inputs: [],
        name: "PRIME_Q",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a6610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80638d532908146038575b600080fd5b605e7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781565b60405190815260200160405180910390f3fea26469706673582212206c4c4cd23edbd4e78a4a3ed02551b30034c538185c222fd3d030efb2ff18764064736f6c63430008140033";
const isSuperArgs = (xs) => xs.length > 1;
class Pairing__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.Pairing__factory = Pairing__factory;
Pairing__factory.bytecode = _bytecode;
Pairing__factory.abi = _abi;
//# sourceMappingURL=Pairing__factory.js.map