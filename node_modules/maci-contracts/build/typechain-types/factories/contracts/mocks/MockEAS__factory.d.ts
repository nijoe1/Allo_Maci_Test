import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BytesLike, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { MockEAS, MockEASInterface } from "../../../contracts/mocks/MockEAS";
type MockEASConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockEAS__factory extends ContractFactory {
    constructor(...args: MockEASConstructorParams);
    getDeployTransaction(_attester: AddressLike, _schema: BytesLike, _recipient: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(_attester: AddressLike, _schema: BytesLike, _recipient: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<MockEAS & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): MockEAS__factory;
    static readonly bytecode = "0x60e060405234801561001057600080fd5b5060405161091c38038061091c83398101604081905261002f91610068565b6001600160a01b0392831660805260a0919091521660c0526100a4565b80516001600160a01b038116811461006357600080fd5b919050565b60008060006060848603121561007d57600080fd5b6100868461004c565b92506020840151915061009b6040850161004c565b90509250925092565b60805160a05160c0516107f861012460003960008181609a015281816101f9015281816102fb0152818161050401526105f001526000818160e10152818161018f015281816103a50152818161049a01526105860152600081816056015281816102280152818161032a0152818161041f015261061f01526107f86000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806347b0c3b31461005157806366d003ac14610095578063a3112a64146100bc578063f8895cc8146100dc575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100cf6100ca36600461066f565b610111565b60405161008c91906106ce565b6101037f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161008c565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e082018390526101008201929092526101208101919091526001829003610278576040518061014001604052806000805160206107a383398151915281526020017f0000000000000000000000000000000000000000000000000000000000000000815260200160006001600160401b0316815260200160006001600160401b0316815260200160016001600160401b031681526020016000805160206107a383398151915281526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600115158152602001604051806020016040528060008152508152509050919050565b600282900361037a576040518061014001604052806000805160206107a383398151915281526020016000805160206107a3833981519152815260200160006001600160401b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000805160206107a383398151915281526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600015158152602001604051806020016040528060008152508152509050919050565b600382900361046f576040518061014001604052806000805160206107a383398151915281526020017f0000000000000000000000000000000000000000000000000000000000000000815260200160006001600160401b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000805160206107a3833981519152815260200160006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600015158152602001604051806020016040528060008152508152509050919050565b6004829003610564576040518061014001604052806000805160206107a383398151915281526020017f0000000000000000000000000000000000000000000000000000000000000000815260200160006001600160401b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000805160206107a383398151915281526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316815260200160006001600160a01b03168152602001600015158152602001604051806020016040528060008152508152509050919050565b6040518061014001604052806000805160206107a383398151915281526020017f0000000000000000000000000000000000000000000000000000000000000000815260200160006001600160401b0316815260200160006001600160401b0316815260200160006001600160401b031681526020016000805160206107a383398151915281526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602001600015158152602001604051806020016040528060008152508152509050919050565b60006020828403121561068157600080fd5b5035919050565b6000815180845260005b818110156106ae57602081850181015186830182015201610692565b506000602082860101526020601f19601f83011685010191505092915050565b602081528151602082015260208201516040820152600060408301516106ff60608401826001600160401b03169052565b5060608301516001600160401b03811660808401525060808301516001600160401b03811660a08401525060a083015160c083015260c083015161074e60e08401826001600160a01b03169052565b5060e083015161010061076b818501836001600160a01b03169052565b84015190506101206107808482018315159052565b84015161014084810152905061079a610160840182610688565b94935050505056fe3078303030303030303030303030303030303030303030303030303030303031a2646970667358221220ff2171a2f2222d970d24b278805ddc6aab7401296841d81263d012c1b7347cb064736f6c63430008140033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_attester";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_schema";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_recipient";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "attester";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "attestationId";
            readonly type: "bytes32";
        }];
        readonly name: "getAttestation";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "uid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "time";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "expirationTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "revocationTime";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "refUID";
                readonly type: "bytes32";
            }, {
                readonly internalType: "address";
                readonly name: "recipient";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "revocable";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IEAS.Attestation";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "recipient";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "schema";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): MockEASInterface;
    static connect(address: string, runner?: ContractRunner | null): MockEAS;
}
export {};
//# sourceMappingURL=MockEAS__factory.d.ts.map